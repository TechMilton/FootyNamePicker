{"version":3,"sources":["components/form/Button.js","components/form/Form.js","urls.js","components/header/Header.js","components/lists/NameLists.js","components/reset/reset.js","views/HomeView/HomeView.js","components/settings/Settings.js","views/SettingsView/SettingsView.js","imgs/Shirt.js","components/lists/Teams.js","views/TeamsView/TeamsView.js","store/initialState.js","store/reducer.js","App.js","index.js"],"names":["Button","history","useHistory","className","onClick","e","push","Form","props","useContext","AppContext","count","state","dispatch","names","useState","input","setInput","colorInput","setColor","length","style","fontWeight","onSubmit","preventDefault","type","value","onChange","currentTarget","required","target","name","appUrls","Header","NameList","map","footballer","index","backgroundImage","color","key","Reset","href","HomeView","to","Settings","teamOne","setTeamOne","teamTwo","setTeamTwo","setCount","disabled","SettingsView","SVG","fill","width","height","viewBox","xmlns","d","Teams","teamOneNames","teamTwoNames","TeamsView","initialState","action","addName","filter","_","i","removeName","addTeamOne","addTeamTwo","shuffleTeam","addCount","React","createContext","App","useReducer","reducer","Provider","basename","path","component","console","log","ReactDOM","render","document","getElementById"],"mappings":"uPAsBeA,G,MAnBA,WAEX,IAAMC,EAAUC,cAOhB,OACI,oCACI,yBAAKC,UAAU,aACX,uBAAGA,UAAU,eAAb,kBACA,4BAAQA,UAAU,WAAWC,QATpB,SAACC,GAElBJ,EAAQK,KAAK,YAOL,sBCgEDC,EA5EF,SAACC,GAAU,MAGmBC,qBAAWC,GAAjCC,EAHG,EAGZC,MAASD,MAASE,EAHN,EAGMA,SACTC,EAAYL,qBAAWC,GAAhCE,MAASE,MAJG,EAOMC,mBAAS,IAPf,mBAObC,EAPa,KAONC,EAPM,OAQWF,mBAAS,IARpB,mBAQbG,EARa,KAQDC,EARC,KA8BpB,OAAIL,EAAMM,QAAUT,EACT,kBAAC,EAAD,MAIP,oCACI,uBAAGR,UAAU,eAAb,iBAEA,uBAAGA,UAAU,aAAb,SAA+B,uBAAGkB,MAAO,CAAEC,WAAY,SAAWX,EAAnC,UAA/B,8CAEA,0BAAMY,SApBO,SAAClB,GAElBA,EAAEmB,iBACFP,EAAS,IACTJ,EAAS,CAAEY,KAAM,WAAYC,MAAO,CAAEV,QAAOE,gBAE7CL,EAAS,CAAEY,KAAM,cAeT,2BAAOtB,UAAU,aAAawB,SA9BtB,SAACtB,GACjBY,EAASZ,EAAEuB,cAAcF,QA6BoCA,MAAOV,EAAOa,UAAQ,IAC3E,uBAAG1B,UAAU,eAAb,kBACA,wBAAIA,UAAU,aAAawB,SA3BnB,SAACtB,GACjBc,EAASd,EAAEyB,OAAOJ,SA2BN,wBAAIvB,UAAU,cACV,2BAAOA,UAAU,cAAcsB,KAAK,QAAQC,MAAM,OAAOK,KAAK,QAAQF,UAAQ,KAElF,wBAAI1B,UAAU,aACV,2BAAOA,UAAU,cAAcsB,KAAK,QAAQC,MAAM,MAAMK,KAAK,QAAQF,UAAQ,KAEjF,wBAAI1B,UAAU,eACV,2BAAOA,UAAU,cAAcsB,KAAK,QAAQC,MAAM,QAAQK,KAAK,QAAQF,UAAQ,KAEnF,wBAAI1B,UAAU,gBACV,2BAAOA,UAAU,cAAcsB,KAAK,QAAQC,MAAM,SAASK,KAAK,QAAQF,UAAQ,KAEpF,wBAAI1B,UAAU,gBACV,2BAAOA,UAAU,cAAcsB,KAAK,QAAQC,MAAM,SAASK,KAAK,QAAQF,UAAQ,KAEpF,wBAAI1B,UAAU,eACV,2BAAOA,UAAU,cAAcsB,KAAK,QAAQC,MAAM,QAAQK,KAAK,QAAQF,UAAQ,KAEnF,wBAAI1B,UAAU,gBACV,2BAAOA,UAAU,cAAcsB,KAAK,QAAQC,MAAM,SAASK,KAAK,QAAQF,UAAQ,KAEpF,wBAAI1B,UAAU,cACV,2BAAOA,UAAU,cAAcsB,KAAK,QAAQC,MAAM,OAAOK,KAAK,QAAQF,UAAQ,MAGtF,4BAAQ1B,UAAU,WAAWsB,KAAK,UAAlC,UCzEHO,EACH,IADGA,EAEC,YAFDA,EAGF,SCQIC,EATA,WACX,OACI,oCACI,wBAAI9B,UAAU,oBAAd,OACA,wBAAIA,UAAU,sBAAd,qBC+BG+B,EAlCE,WAAM,MAGoBzB,qBAAWC,GAAjCI,EAHE,EAGXF,MAASE,MAASD,EAHP,EAGOA,SAE1B,OAEI,2BAAOV,UAAU,eACb,+BACI,4BACI,wBAAIA,UAAU,qBAAd,mBAGR,+BACsB,IAAjBW,EAAMM,OAAe,KAClB,wBAAIjB,UAAU,iBACTW,EAAMqB,KAAI,SAACC,EAAYC,GAAb,OACP,wBAAIlC,UAAU,gBAAgBkB,MAAO,CAAEiB,gBAAiBF,EAAWG,OAASC,IAAKH,GAC7E,kCAAQD,EAAWL,MACnB,0BAAM5B,UAAU,iBACZ,4BAAQA,UAAU,aACdC,QAAS,kBAAMS,EAAS,CAAEY,KAAM,cAAeY,MAAOA,MAD1D,cCPrBI,EAbD,WAAO,IACF5B,EAAaJ,qBAAWC,GAA/BE,MAER,OACI,uBACI8B,KAAK,IACLvC,UAAU,YACVC,QAAS,kBAAMS,EAAS,CAAEY,KAAM,YAHpC,eCmBOkB,EAhBE,kBACb,oCACI,yBAAKxC,UAAU,gBACX,kBAAC,IAAD,CAAMA,UAAU,YAAYyC,GAAIZ,GAAhC,iBACA,kBAAC,EAAD,OAEJ,yBAAK7B,UAAU,kBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,aACX,kBAAC,EAAD,SC+DG0C,EAhFE,WAAM,IAGXhC,EAAaJ,qBAAWC,GAAxBG,SACFZ,EAAUC,cAJG,EAMWa,mBAAS,IANpB,mBAMZ+B,EANY,KAMHC,EANG,OAOWhC,mBAAS,IAPpB,mBAOZiC,EAPY,KAOHC,EAPG,OAQOlC,mBAAS,GARhB,mBAQZJ,EARY,KAQLuC,EARK,KAkCnB,OACI,oCAEI,0BAAM3B,SAdO,SAAClB,GAElBA,EAAEmB,iBACFuB,EAAW,IACXE,EAAW,IACXpC,EAAS,CAAEY,KAAM,WAAYC,MAAO,CAAEoB,aACtCjC,EAAS,CAAEY,KAAM,WAAYC,MAAO,CAAEsB,aACtCnC,EAAS,CAAEY,KAAM,QAASC,MAAO,CAAEf,WACnCV,EAAQK,KAAK,OAOL,2BAAOH,UAAU,eAAjB,uBACA,2BACIA,UAAU,iBACVsB,KAAK,OACLE,SAhCM,SAACtB,GACnB0C,EAAW1C,EAAEyB,OAAOJ,QAgCRA,MAAOoB,EACPjB,UAAQ,IAGZ,2BAAO1B,UAAU,eAAjB,wBACA,2BACIA,UAAU,iBACVsB,KAAK,OACLE,SArCM,SAACtB,GACnB4C,EAAW5C,EAAEyB,OAAOJ,QAqCRA,MAAOsB,IAEX,yBAAK7C,UAAU,WACX,2BAAOA,UAAU,eAAjB,sBACA,uBAAGA,UAAU,kBAAkBwB,SAtC3B,SAACtB,GACjB6C,EAAS7C,EAAEyB,OAAOJ,SAqCiDf,EAAvD,YAEA,4BACIR,UAAU,cACVsB,KAAK,SACL0B,SAAUxC,EAAQ,EAClBP,QAAS,kBAAM8C,EAASvC,EAAQ,KAJpC,KAMA,4BACIR,UAAU,cACVsB,KAAK,SACL0B,SAAUxC,EAAQ,EAClBP,QAAS,kBAAM8C,EAASvC,EAAQ,KAJpC,MAQJ,2BAAOR,UAAU,eAAjB,UACA,4BAAQsB,KAAK,SAAStB,UAAU,gBAAhC,YCvDDiD,EAbM,kBACjB,oCACI,yBAAKjD,UAAU,gBACX,kBAAC,IAAD,CAAMA,UAAU,YAAYyC,GAAIZ,GAAhC,gBACA,kBAAC,EAAD,OAEJ,yBAAK7B,UAAU,kBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,SCMGkD,EArBH,SAAC,GAIN,IAAD,IAHFC,YAGE,MAHK,OAGL,MAFFC,aAEE,MAFM,IAEN,MADFC,cACE,MADO,IACP,EACF,OACI,oCACI,yBAAKrD,UAAU,mBAAmBmD,KAAMA,EAAME,OAAQA,EAAQC,QAAQ,cAAcF,MAAOA,EAAOG,MAAM,8BAA6B,2BAAG,0BAAMC,EAAE,oDAC5I,0BAAMA,EAAE,oEAER,0BAAMA,EAAE,kHAER,0BAAMA,EAAE,2CAER,0BAAMA,EAAE,+KCoDTC,EA/DD,WAAM,IAGC9C,EAAYL,qBAAWC,GAAhCE,MAASE,MAEAgC,EAAcrC,qBAAWC,GAAlCE,MAASkC,QACAE,EAAcvC,qBAAWC,GAAlCE,MAASoC,QAEAa,EAAmBpD,qBAAWC,GAAvCE,MAASiD,aACAC,EAAmBrD,qBAAWC,GAAvCE,MAASkD,aAEAnD,EAAYF,qBAAWC,GAAhCE,MAASD,MAEjB,OAAIG,EAAMM,OAAST,EACR,KAIP,oCACI,2BAAOR,UAAU,kBACb,+BACI,4BACI,wBAAIA,UAAU,qBAAd,QAAwC2C,KAGhD,+BAC6B,IAAxBe,EAAazC,OAAe,KACzB,4BACKyC,EAAa1B,KAAI,SAACC,EAAYC,GAAb,OACd,wBAAIlC,UAAU,gBAAgBqC,IAAKH,GAC/B,0BAAMlC,UAAU,mBAAmBiC,EAAWL,MAC9C,kBAAC,EAAD,CAAKuB,KAAMlB,EAAWG,eAQ9C,2BAAOpC,UAAU,kBACb,+BACI,4BACI,wBAAIA,UAAU,qBAAd,QAAwC6C,KAGhD,+BAC6B,IAAxBc,EAAa1C,OAAe,KACzB,4BACK0C,EAAa3B,KAAI,SAACC,EAAYC,GAAb,OACd,wBAAIlC,UAAU,gBAAgBqC,IAAKH,GAC/B,0BAAMlC,UAAU,mBAAmBiC,EAAWL,MAC9C,kBAAC,EAAD,CAAKuB,KAAMlB,EAAWG,iBC9B3CwB,EAjBG,kBACd,oCACI,yBAAK5D,UAAU,gBACX,kBAAC,IAAD,CAAMA,UAAU,YAAYyC,GAAIZ,GAAhC,gBACA,kBAAC,IAAD,CAAM7B,UAAU,YAAYyC,GAAIZ,GAAhC,iBACA,kBAAC,EAAD,OAEJ,yBAAK7B,UAAU,kBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,yBAAKA,UAAU,cACX,kBAAC,EAAD,S,eCbG6D,EARM,CACjBlD,MAAO,GACPyB,MAAO,GACPO,QAAS,GACTE,QAAS,GACTrC,MAAO,GC8DI,WAACC,EAAOqD,GACnB,OAAQA,EAAOxC,MACX,IAAK,WAAY,OAlEF,SAACb,EAAD,GAAuB,IAAbc,EAAY,EAAZA,MAC7B,OAAO,2BACAd,GADP,IAEIE,MAAM,GAAD,mBAAMF,EAAME,OAAZ,CAAmB,CACpBiB,KAAML,EAAMV,MACZuB,MAAOb,EAAMR,gBA6DOgD,CAAQtD,EAAOqD,GACvC,IAAK,cAAe,OAXF,SAACrD,EAAD,GAAuB,IAAbyB,EAAY,EAAZA,MAChC,OAAO,2BACAzB,GADP,IAEIE,MAAOF,EAAME,MAAMqD,QAAO,SAACC,EAAGC,GAAJ,OAAUA,IAAMhC,OAQfiC,CAAW1D,EAAOqD,GAC7C,IAAK,WAAY,OAzDC,SAACrD,EAAD,GAAuB,IAAbc,EAAY,EAAZA,MAChC,OAAO,2BACAd,GADP,IAEIkC,QAASpB,EAAMoB,UAsDSyB,CAAW3D,EAAOqD,GAC1C,IAAK,WAAY,OAlDC,SAACrD,EAAD,GAAuB,IAAbc,EAAY,EAAZA,MAChC,OAAO,2BACAd,GADP,IAEIoC,QAAStB,EAAMsB,UA+CSwB,CAAW5D,EAAOqD,GAC1C,IAAK,UAAW,OApCG,SAACrD,GAOxB,IANA,IAAME,EAAQF,EAAME,MACd+C,EAAe,GACfC,EAAe,GAIZO,EAAI,EAAGA,EAAIvD,EAAMM,OAAQiD,IAC1BA,EAAI,IAAM,EACVR,EAAavD,KAAKQ,EAAMuD,IAExBP,EAAaxD,KAAKQ,EAAMuD,IAGhC,OAAO,2BACAzD,GADP,IAEIiD,aAAcA,EACdC,aAAcA,IAmBSW,CAAY7D,GACnC,IAAK,QAAS,OA5CE,SAACA,EAAD,GAAuB,IAAbc,EAAY,EAAZA,MAC9B,OAAO,2BACAd,GADP,IAEID,MAAOe,EAAMf,QAyCQ+D,CAAS9D,EAAOqD,GACrC,IAAK,QAAS,OAAOD,EACrB,QAAS,OAAOpD,ICxDXF,EAAaiE,IAAMC,cAAc,IAoB/BC,EAlBH,WAAO,IAAD,EAEQC,qBAAWC,EAASf,GAF5B,mBAGZtC,EAAQ,CAAEd,MAHE,KAGKC,SAHL,MAKhB,OACE,kBAACH,EAAWsE,SAAZ,CAAqBtD,MAAOA,GAC1B,kBAAC,IAAD,CAAQuD,SAAS,KACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAMlD,EAAcmD,UAAWxC,IACtC,kBAAC,IAAD,CAAOuC,KAAMlD,EAAkBmD,UAAW/B,IAC1C,kBAAC,IAAD,CAAO8B,KAAMlD,EAAemD,UAAWpB,QC3BjDqB,QAAQC,IAAI,uBACZC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEAC,SAASC,eAAe,W","file":"static/js/main.909f1a12.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Button = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        //redirects user to /teams page\r\n        history.push(\"/teams\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"btn-teams\">\r\n                <p className=\"input-label\">Generate Teams</p>\r\n                <button className=\"main-btn\" onClick={handleSubmit}>Generate Teams</button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { useState, useContext } from \"react\";\r\nimport { AppContext } from \"../../App\";\r\nimport Button from \"./Button\";\r\n\r\nconst Form = (props) => {\r\n\r\n    //initialize context (so that you can reach the data)\r\n    const { state: { count }, dispatch } = useContext(AppContext);\r\n    const { state: { names } } = useContext(AppContext);\r\n\r\n    //keep track of input value\r\n    const [input, setInput] = useState(\"\");\r\n    const [colorInput, setColor] = useState(\"\");\r\n\r\n    // update name input state\r\n    const handleInput = (e) => {\r\n        setInput(e.currentTarget.value);\r\n    };\r\n\r\n    // update color input state\r\n    const handleColor = (e) => {\r\n        setColor(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        //prevents the page from refreshing on submit\r\n        e.preventDefault();\r\n        setInput(\"\");\r\n        dispatch({ type: \"ADD_NAME\", value: { input, colorInput } });\r\n        // Reset state after submit\r\n        dispatch({ type: \"SHUFFLE\" });\r\n    };\r\n\r\n    // If the name list is greater than or equal to count return the reset button\r\n    if (names.length >= count) {\r\n        return <Button />\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <p className=\"input-label\">Players Name:</p>\r\n\r\n            <p className=\"form-info\">After <i style={{ fontWeight: \"bold\" }}>{count} names</i>, your teams will be randomly be generated</p>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input className=\"name-input\" onChange={handleInput} value={input} required />\r\n                <p className=\"input-label\">Players Color:</p>\r\n                <ul className=\"color-list\" onChange={handleColor}>\r\n                    <li className=\"color-blue\">\r\n                        <input className=\"color-radio\" type=\"radio\" value=\"blue\" name=\"color\" required />\r\n                    </li>\r\n                    <li className=\"color-red\" >\r\n                        <input className=\"color-radio\" type=\"radio\" value=\"red\" name=\"color\" required />\r\n                    </li>\r\n                    <li className=\"color-green\">\r\n                        <input className=\"color-radio\" type=\"radio\" value=\"green\" name=\"color\" required />\r\n                    </li>\r\n                    <li className=\"color-yellow\">\r\n                        <input className=\"color-radio\" type=\"radio\" value=\"yellow\" name=\"color\" required />\r\n                    </li>\r\n                    <li className=\"color-purple\">\r\n                        <input className=\"color-radio\" type=\"radio\" value=\"purple\" name=\"color\" required />\r\n                    </li>\r\n                    <li className=\"color-brown\">\r\n                        <input className=\"color-radio\" type=\"radio\" value=\"brown\" name=\"color\" required />\r\n                    </li>\r\n                    <li className=\"color-orange\">\r\n                        <input className=\"color-radio\" type=\"radio\" value=\"orange\" name=\"color\" required />\r\n                    </li>\r\n                    <li className=\"color-pink\">\r\n                        <input className=\"color-radio\" type=\"radio\" value=\"pink\" name=\"color\" required />\r\n                    </li>\r\n                </ul>\r\n                <button className=\"main-btn\" type=\"submit\">Add</button>\r\n            </form>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Form;\r\n\r\n","export const appUrls = {\r\n    HOME: '/',\r\n    SETTINGS: '/settings',\r\n    TEAMS: '/teams',\r\n};\r\n","import React from 'react';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <h2 className=\"page-header__the\">The</h2>\r\n            <h1 className=\"page-header__title\">FootyTeamPicker</h1>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../App\";\r\n\r\nconst NameList = () => {\r\n\r\n    //initialize context so that you can reach the data\r\n    const { state: { names }, dispatch } = useContext(AppContext);\r\n\r\n    return (\r\n\r\n        <table className=\"names-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th className=\"names-table-title\">Footballers: </th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {names.length === 0 ? null : (\r\n                    <tr className=\"tr-list-names\">\r\n                        {names.map((footballer, index) => (\r\n                            <td className=\"td-list-names\" style={{ backgroundImage: footballer.color }} key={index}>\r\n                                <span> {footballer.name}</span>\r\n                                <span className=\"tr-list-names\">\r\n                                    <button className=\"remove-btn\"\r\n                                        onClick={() => dispatch({ type: \"REMOVE_NAME\", index: index })}>\r\n                                        x\r\n                                </button>\r\n                                </span>\r\n                            </td>\r\n                        ))}\r\n                    </tr>\r\n                )}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default NameList;","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../App\";\r\n\r\nconst Reset = () => {\r\n    const { state: dispatch } = useContext(AppContext);\r\n\r\n    return (\r\n        <a\r\n            href=\"/\"\r\n            className=\"nav-links\"\r\n            onClick={() => dispatch({ type: \"RESET\", })}>\r\n            Reset Game\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default Reset;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Form from '../../components/form/Form';\r\nimport { appUrls } from '../../urls';\r\nimport Header from '../../components/header/Header';\r\nimport ListName from '../../components/lists/NameLists';\r\nimport Reset from '../../components/reset/reset';\r\n\r\n\r\nconst HomeView = () => (\r\n    <>\r\n        <div className=\"main-nav-bar\">\r\n            <Link className=\"nav-links\" to={appUrls.SETTINGS}>Game Settings</Link>\r\n            <Reset />\r\n        </div>\r\n        <div className=\"page-container\">\r\n            <Header />\r\n            <Form />\r\n        </div>\r\n        <div className=\"list-name\">\r\n            <ListName />\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default HomeView;","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { AppContext } from \"../../App\";\r\n\r\nconst Settings = () => {\r\n\r\n    //initialize context so that you can reach the data\r\n    const { dispatch } = useContext(AppContext);\r\n    const history = useHistory();\r\n\r\n    const [teamOne, setTeamOne] = useState(\"\");\r\n    const [teamTwo, setTeamTwo] = useState(\"\");\r\n    const [count, setCount] = useState(4);\r\n\r\n    const handleTeamOne = (e) => {\r\n        setTeamOne(e.target.value);\r\n    };\r\n\r\n    const handleTeamTwo = (e) => {\r\n        setTeamTwo(e.target.value);\r\n    };\r\n\r\n    const handleCount = (e) => {\r\n        setCount(e.target.value);\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        //prevents the page from refreshing on submit\r\n        e.preventDefault();\r\n        setTeamOne(\"\");\r\n        setTeamTwo(\"\");\r\n        dispatch({ type: \"TEAM_ONE\", value: { teamOne } });\r\n        dispatch({ type: \"TEAM_TWO\", value: { teamTwo } });\r\n        dispatch({ type: \"COUNT\", value: { count } });\r\n        history.push(\"/\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <label className=\"input-label\">First Team Captain:</label>\r\n                <input\r\n                    className=\"settings-input\"\r\n                    type=\"text\"\r\n                    onChange={handleTeamOne}\r\n                    value={teamOne}\r\n                    required\r\n                />\r\n\r\n                <label className=\"input-label\">Second Team Captain:</label>\r\n                <input\r\n                    className=\"settings-input\"\r\n                    type=\"text\"\r\n                    onChange={handleTeamTwo}\r\n                    value={teamTwo}\r\n                />\r\n                <div className=\"counter\">\r\n                    <label className=\"input-label\">Number of Players:</label>\r\n                    <p className=\"counter-display\" onChange={handleCount}>{count} Players</p>\r\n\r\n                    <button\r\n                        className=\"counter-btn\"\r\n                        type=\"button\"\r\n                        disabled={count > 9}\r\n                        onClick={() => setCount(count + 1)} >+</button>\r\n\r\n                    <button\r\n                        className=\"counter-btn\"\r\n                        type=\"button\"\r\n                        disabled={count < 5}\r\n                        onClick={() => setCount(count - 1)} >-</button>\r\n\r\n                </div>\r\n\r\n                <label className=\"input-label\">Submit</label>\r\n                <button type=\"submit\" className=\"settings-btn\">Start</button>\r\n            </form>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Header from '../../components/header/Header';\r\nimport Settings from '../../components/settings/Settings'\r\nimport { appUrls } from '../../urls';\r\n\r\nimport Reset from '../../components/reset/reset';\r\n\r\nconst SettingsView = () => (\r\n    <>\r\n        <div className=\"main-nav-bar\">\r\n            <Link className=\"nav-links\" to={appUrls.HOME}>Link to Home</Link>\r\n            <Reset />\r\n        </div>\r\n        <div className=\"page-container\">\r\n            <Header />\r\n            <Settings />\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default SettingsView;\r\n","import React from \"react\";\r\n\r\nconst SVG = ({\r\n    fill = \"#000\",\r\n    width = 150,\r\n    height = 150,\r\n}) => {\r\n    return (\r\n        <>\r\n            <svg className=\"footballer-shirt\" fill={fill} height={height} viewBox=\"0 0 512 512\" width={width} xmlns=\"http://www.w3.org/2000/svg\"><g><path d=\"m49.097 129.396h60.636v-125.373l-60.636 60.637z\" />\r\n                <path d=\"m139.733 512h101.267v-93.84h30v93.84h101.267v-187.681h-232.534z\" />\r\n\r\n                <path d=\"m256 58.779c19.204 0 34.827-15.624 34.827-34.828v-23.951h-69.655v23.952c0 19.204 15.624 34.827 34.828 34.827z\" />\r\n\r\n                <path d=\"m402.267 4.023v125.373h60.636v-64.736z\" />\r\n\r\n                <path d=\"m320.827 23.952c0 35.746-29.081 64.828-64.827 64.828s-64.828-29.082-64.828-64.828v-23.952h-51.439v294.319h232.533v-294.319h-51.439zm17.872 138.208h-48.288v-30h48.288z\" />\r\n            </g>\r\n            </svg>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default SVG;\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../App\";\r\nimport SVG from \"../../imgs/Shirt\";\r\n\r\n\r\nconst Teams = () => {\r\n\r\n    //initialize context so that you can reach the data\r\n    const { state: { names } } = useContext(AppContext);\r\n\r\n    const { state: { teamOne } } = useContext(AppContext);\r\n    const { state: { teamTwo } } = useContext(AppContext);\r\n\r\n    const { state: { teamOneNames } } = useContext(AppContext);\r\n    const { state: { teamTwoNames } } = useContext(AppContext);\r\n\r\n    const { state: { count } } = useContext(AppContext);\r\n\r\n    if (names.length < count) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table className=\"team-one-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"teams-table-title\">Team {teamOne}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {teamOneNames.length === 0 ? null : (\r\n                        <tr >\r\n                            {teamOneNames.map((footballer, index) => (\r\n                                <td className=\"tr-list-teams\" key={index}>\r\n                                    <span className=\"footballer-name\">{footballer.name}</span>\r\n                                    <SVG fill={footballer.color} />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n\r\n            <table className=\"team-two-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th className=\"teams-table-title\">Team {teamTwo}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {teamTwoNames.length === 0 ? null : (\r\n                        <tr >\r\n                            {teamTwoNames.map((footballer, index) => (\r\n                                <td className=\"tr-list-teams\" key={index}>\r\n                                    <span className=\"footballer-name\">{footballer.name}</span>\r\n                                    <SVG fill={footballer.color} />\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Teams;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { appUrls } from '../../urls';\r\nimport Header from '../../components/header/Header';\r\nimport Teams from '../../components/lists/Teams';\r\nimport Reset from '../../components/reset/reset';\r\n\r\n\r\nconst TeamsView = () => (\r\n    <>\r\n        <div className=\"main-nav-bar\">\r\n            <Link className=\"nav-links\" to={appUrls.HOME}>Link to Home</Link>\r\n            <Link className=\"nav-links\" to={appUrls.SETTINGS}>Game Settings</Link>\r\n            <Reset />\r\n        </div>\r\n        <div className=\"page-container\">\r\n            <Header />\r\n            <Reset />\r\n        </div>\r\n        <div className=\"list-teams\">\r\n            <Teams />\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default TeamsView;","const initialState = {\r\n    names: [],\r\n    color: \"\",\r\n    teamOne: \"\",\r\n    teamTwo: \"\",\r\n    count: 4,\r\n};\r\n\r\nexport default initialState;","import initialState from \"./initialState\";\r\n\r\n//Add name to list\r\nexport const addName = (state, { value }) => {\r\n    return {\r\n        ...state,\r\n        names: [...state.names, {\r\n            name: value.input,\r\n            color: value.colorInput,\r\n        }],\r\n    };\r\n};\r\n\r\n//Add Team One Name -- Settings Page\r\nexport const addTeamOne = (state, { value }) => {\r\n    return {\r\n        ...state,\r\n        teamOne: value.teamOne,\r\n    };\r\n}\r\n\r\n//Add Team Two Name - Settings Page\r\nexport const addTeamTwo = (state, { value }) => {\r\n    return {\r\n        ...state,\r\n        teamTwo: value.teamTwo,\r\n    };\r\n}\r\n\r\n//Add player counter - Settings Page\r\nexport const addCount = (state, { value }) => {\r\n    return {\r\n        ...state,\r\n        count: value.count,\r\n    };\r\n}\r\n\r\nexport const shuffleTeam = (state) => {\r\n    const names = state.names;\r\n    const teamOneNames = [];\r\n    const teamTwoNames = [];\r\n\r\n    //Loops over each name and splits them into two lists depending if they are divisible by 2\r\n\r\n    for (let i = 0; i < names.length; i++) {\r\n        if (i % 2 === 0) {\r\n            teamOneNames.push(names[i]);\r\n        } else {\r\n            teamTwoNames.push(names[i]);\r\n        }\r\n    }\r\n    return {\r\n        ...state,\r\n        teamOneNames: teamOneNames,\r\n        teamTwoNames: teamTwoNames,\r\n    };\r\n}\r\n\r\n//Remove name from list\r\nexport const removeName = (state, { index }) => {\r\n    return {\r\n        ...state,\r\n        names: state.names.filter((_, i) => i !== index),\r\n    };\r\n};\r\n\r\n//export default data\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_NAME\": return addName(state, action);\r\n        case \"REMOVE_NAME\": return removeName(state, action);\r\n        case \"TEAM_ONE\": return addTeamOne(state, action);\r\n        case \"TEAM_TWO\": return addTeamTwo(state, action);\r\n        case \"SHUFFLE\": return shuffleTeam(state);\r\n        case \"COUNT\": return addCount(state, action);\r\n        case \"RESET\": return initialState;\r\n        default: return state;\r\n    };\r\n}\r\n\r\n\r\n","import React, { useReducer } from 'react';\n\n// import the ReactRouter components\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport HomeView from './views/HomeView/HomeView';\nimport SettingsView from './views/SettingsView/SettingsView';\nimport TeamsView from './views/TeamsView/TeamsView';\nimport reducer from './store/reducer';\nimport initialState from './store/initialState';\n\nimport { appUrls } from './urls';\n\n// Creating a context through which we will be able to access global state\nexport const AppContext = React.createContext({});\n\nconst App = () => {\n\n  let [state, dispatch] = useReducer(reducer, initialState);\n  let value = { state, dispatch };\n\n  return (\n    <AppContext.Provider value={value}>\n      <Router basename=\"/\">\n        <Switch>\n          <Route path={appUrls.HOME} component={HomeView} />\n          <Route path={appUrls.SETTINGS} component={SettingsView} />\n          <Route path={appUrls.TEAMS} component={TeamsView} />\n        </Switch>\n      </Router>\n    </AppContext.Provider >\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nconsole.log('index.js is running')\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'));\n\n"],"sourceRoot":""}